container_name = 'ln_basic_website_prd'
docker_host = 'unix:///var/run/docker.sock'
website_version = 'NA'


def dockerCleanup() {
    docker.withServer("${docker_host}") {
        sh "docker stop ${container_name} || true"
        sh "docker rm ${container_name} || true"
    }
}

def slack_error(stage) {
    slackSend color: 'danger', message: "Production Pipeline for Findmore CI/CD Demo failed at stage ${stage}."
}


node {
    stage('Preparation') {
        deleteDir() //clean workspace to garantee always a clean build - this will force a git clone, instead of pull, which can be slower

    }

     stage('Checkout') {
        git branch: 'dev', url: 'https://gitlab.com/luisnabais_talks/cicd_101_talk.git'

        updateGitlabCommitStatus name: 'Checkout', state: 'success'
    }
    
    stage('Deploy') {
        sh "echo 'Deploy'"

        website_version = readFile "code/docker/website/VERSION"
        
        docker.withServer("${docker_host}") {
            try {
                sh "docker run -tdi --name ${container_name} \
                    --network proxy \
                    --label traefik.web.port=80 \
                    --label traefik.web.frontend.rule=Host:findmore-demo.luisnabais.com \
                    --label traefik.web.frontend.entryPoints=http,https \
                    ${container_name}:${website_version}"

                updateGitlabCommitStatus name: 'Deploy', state: 'success'
            }
            catch (Exception ex) {
	            updateGitlabCommitStatus name: 'Deploy', state: 'failed'
	            slack_error('Deploy')
	            dockerCleanup()
                error('Error on stage Deploy')
	        }
        }
    }
    
    stage('Post Build') {
        slackSend color: 'good', message: "Production Pipeline for Findmore CI/CD Demo completed successfuly."
    }
}